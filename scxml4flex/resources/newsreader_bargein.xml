<?xml version="1.0"?>
<scxml version="1.0" profile="ecmascript" xmlns="http://www.w3.org/2005/07/scxml" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.w3.org/2005/07/scxml http://scxml-schema.googlecode.com/svn/SCXML-Schema/ecma/scxml-profile-ecma.xsd">

	<script><![CDATA[
		function generateGrammarFromList(inputList) {
			return "#JSGF V1.0; \ngrammar g; \npublic <top> = " + inputList.join(" | ").toLowerCase() + ";\n";
		}
	]]></script>

	<datamodel>
		<data id="lastRequest" />
		<data id="languages" />
		<data id="categories" />
		<data id="sources" />
		<data id="reading_list" />
		<data id="bargein" expr="true" />
	</datamodel>

	<state id="main">
		<invoke id="nextphase" type="x-acapela-nextphase">
			<finalize>
				<assign location="lastRequest" expr="_event.data.lastResult" />
			</finalize>
		</invoke>
		
		<invoke id="agent" type="scxml" src="resources/dialog_agent.xml" />
		<parallel id="init">
			<state id="init_agent">
				<state><transition event="init.invoke.agent" target="f1" /></state>
				<final id="f1" />
			</state>
			<state id="init_newsreader">
				<state><transition event="init.invoke.nextphase" target="f2" /></state>
				<final id="f2" />
			</state>
			<transition event="done.state.init" target="welcome" />
		</parallel>
		
		<state id="welcome">
			<onentry>
				<send event="say" target="#agent">
					<param name="say" expr="'Welcome to the newsreader.'" />
				</send>
			</onentry>
			<transition event="result.invoke.agent" target="dialog" />
		</state>
		
		<state id="dialog">
			
			<state id="lang">
				<onentry>
					<send type="x-acapela-nextphase" target="#nextphase" event="getLanguages" />
				</onentry>

				<transition event="result.invoke.nextphase">
					<send event="prompt" target="#agent" namelist="bargein">
						<param name="say" expr="'In which language would you like your news?'" />
						<param name="grammar" expr="generateGrammarFromList(lastRequest)" />
					</send>
				</transition>

				<transition event="result.invoke.agent.asr" target="cat">
					<assign location="lang" expr="_event.data.lastResult" />
				</transition>

			</state>

			<state id="cat">
				<onentry>
					<send type="x-acapela-nextphase" target="#nextphase" event="getCategories" namelist="lang"  />
				</onentry>

				<transition event="result.invoke.nextphase">
					<send event="prompt" target="#agent" namelist="bargein">
						<param name="say" expr="'Which type of news would you like to hear?'" />
						<param name="grammar" expr="generateGrammarFromList(lastRequest)" />
					</send>
				</transition>

				<transition event="result.invoke.agent.asr" target="news_source">
					<assign location="cat" expr="_event.data.lastResult" />
				</transition>

			</state>

			<state id="news_source">
				<onentry>
					<send type="x-acapela-nextphase" target="#nextphase" event="getSources" namelist="lang cat" />
				</onentry>

				<transition event="result.invoke.nextphase">
					<send event="prompt" target="#agent" namelist="bargein">
						<param name="say" expr="'Which source would you prefer?'" />
						<param name="grammar" expr="generateGrammarFromList(lastRequest)" />
					</send>
				</transition>

				<transition event="result.invoke.agent.asr" target="reading">
					<assign location="source" expr="_event.data.lastResult" />
				</transition>
			</state>
		</state>

		<state id="reading">
			<onentry>
				<send type="x-acapela-nextphase" target="#nextphase" event="getNewsItems" namelist="lang cat source" />
			</onentry>

			<state id="reading_init">
				<transition event="result.invoke.nextphase" >
					<assign location="reading_list" expr="lastRequest.reverse()"/>
					<send event="say" target="#agent">
						<param name="say" expr="'Found ' + reading_list.length + ' news items. Say \'skip\' to skip current item. '" />
					</send>
				</transition>
				<transition event="result.invoke.agent.tts" target="speaking" />
			</state>
			
			<state id="speaking">
				<onentry>
					<script>
						var current_item = reading_list.pop();
						var toRead = current_item.title + ".\n" + current_item.ingress;
					</script>
					<send event="prompt" target="#agent" namelist="bargein">
						<param name="say" expr="toRead" />
						<param name="grammar" expr="generateGrammarFromList(['skip'])" />
					</send>
				</onentry>
				<transition event="result.invoke.agent" cond="reading_list.length &gt; 0" target="speaking" />
				<transition event="result.invoke.agent" target="reading_done" />
			</state>
		</state>
		
		<state id="reading_done">
			<onentry>
				<send event="prompt" target="#agent" namelist="bargein">
					<param name="say" expr="'I\'ve finished reading. Would you like to hear more news?'" />
					<param name="grammar" expr="generateGrammarFromList(['yes', 'no'])" />
				</send>
			</onentry>

			<transition event="result.invoke.agent.asr.yes" target="dialog" />
			<transition event="result.invoke.agent.asr.no" target="final" />
			
		</state>
	</state>
	<final id="final" />
</scxml>

